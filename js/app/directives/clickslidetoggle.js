
// Generated by CoffeeScript 1.4.0

/*

 ownCloud - App Framework

 @author Bernhard Posselt
 @copyright 2012 Bernhard Posselt dev@bernhard-posselt.com

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
 License as published by the Free Software Foundation; either
 version 3 of the License, or any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 GNU AFFERO GENERAL PUBLIC LICENSE for more details.

 You should have received a copy of the GNU Affero General Public
 License along with this library. If not, see <http://www.gnu.org/licenses/>.
 */



angular.module('Tasks').directive('ocClickSlideToggle', [
	'$rootScope', function($rootScope) {
		return function(scope, elm, attr) {
			var cssClass, options, slideArea;
			options = scope.$eval(attr.ocClickSlideToggle);
			if (angular.isDefined(options) && angular.isDefined(options.selector)) {
				slideArea = $(options.selector);
			} else {
				slideArea = elm;
			}
			if (angular.isDefined(options) && angular.isDefined(options.cssClass)) {
				cssClass = options.cssClass;
			} else {
				cssClass = false;
			}
			elm.click(function() {
				if (slideArea.is(':visible') && !slideArea.is(':animated')) {
					slideArea.slideUp();
					if (cssClass !== false) {
						return elm.removeClass('opened');
					}
				} else {
					slideArea.slideDown();
					if (cssClass !== false) {
						return elm.addClass('opened');
					}
				}
			});
			if (angular.isDefined(options) && angular.isDefined(options.hideOnFocusLost) && options.hideOnFocusLost) {
				$(document.body).click(function() {
					return $rootScope.$broadcast('ocLostFocus');
				});
				$rootScope.$on('ocLostFocus', function(scope, params) {
					if (params !== slideArea) {
						if (slideArea.is(':visible') && !slideArea.is(':animated')) {
							slideArea.slideUp();
							if (cssClass !== false) {
								return elm.removeClass('opened');
							}
						}
					}
				});
				slideArea.click(function(e) {
					$rootScope.$broadcast('ocLostFocus', slideArea);
					return e.stopPropagation();
				});
				return elm.click(function(e) {
					$rootScope.$broadcast('ocLostFocus', slideArea);
					return e.stopPropagation();
				});
			}
		};
	}
]);

